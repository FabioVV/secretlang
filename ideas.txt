TODO: fix tests

TODO: store the line of code of the instruction in the instruction_position hash, much easier

1 - Add error correction suggestion:
context aware suggestions
spelling checking with Levenshtein Distance

 - Add more specialized instructions like addi (i know both are integers, dispacth a instructions that does not type checking during runtime and just adds them)

 - add simple type checking before runtime so that the specialized instructions from above can work

 - Change error text from the current expected both to be, got ? to this: expect expectec both to be ?, but got ? and ?

 - Just go around parsing showing the errors and do not append to a list of errors, instead set a field hadError, that if its value is true, do not compile the program
 - Add type inferring the in parser/compiler, that way i can optmize some operations like sum. So, instead of doing runtime type checks, if i know iam adding two numbers, have a separate instruction for addition that does no type checking

 - fix strings handling/interning !IMPORTANT

Language ideas

 - Have a options to output a dump/object file that later the VM can run by itself, without going through the entire pipeline(executables but for the VM, i think)

2.1 - other ideas

// some stupid ideas.....

module math
    @imports("math_helpers.ext") // imports as math_helpers.something
    const mthp = @imports("math_helpers.ext") // imports as mthp.something

end

maybe allow submodules?
